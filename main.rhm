#lang rhombus

import:
   rhombus/meta open
   lib("racket/main.rkt") as racket
   lib("raylib/2d/unsafe.rkt") as raylib
   lib("raylib/raymath/unsafe.rkt") as raymath

   "lib/datatypes.rhm" open
   "lib/lang.rhm" open
   "game/raylib_lang.rhm" open
   "game/view.rhm" open
   "game/game_map.rhm"
   "lib/resources.rhm" expose: def_texture
   "game/terrain.rhm"
   "entities/humanoid.rhm"
   "lib/ecs.rhm" open
   "lib/ordered_drawing.rhm"

   "components/movement.rhm" open
   "components/graphics.rhm" open
   "components/input.rhm" open

   "systems/movement.rhm" open
   "systems/user_control.rhm" open
   "systems/animation.rhm" open
   "systems/drawing.rhm" open

   meta:
     lib("racket/syntax.rkt") as syntax


use_static

def_texture main_character_image : "./resources/images/male_walkcycle.png"
def_texture blacksmith_image : "./resources/images/soldier.png"

def HUMANOID_FRAMES : 9
  
instance Player:
  component position :~ Position = Vector2(320.,320.)
  component velocity :~ Velocity = Vector2(0.,0.)
  component orientation :~ Orientation = direction.DOWN
  component sprite :~ AnimatedSprite = AnimatedSprite(
      main_character_image,
      #false,
      0,
      0.05,
      0.,
      HUMANOID_FRAMES
    )
  component control :~ UserController = 100.0

instance NPC:
  component position :~ Position = Vector2(320.,320.)
  component velocity :~ Velocity = Vector2(0.,0.)
  component orientation :~ Orientation = direction.DOWN
  component sprite :~ AnimatedSprite = AnimatedSprite(
      blacksmith_image,
      #false,
      0,
      0.05,
      0.,
      HUMANOID_FRAMES
    )


  
def character: Player.create()
def blacksmith: NPC.create()
    
// constants
def screen_width: 800
def screen_height: 450

def view : View()
def map : game_map.Map(100,100, terrain.rock)

raylib.InitWindow(screen_width,screen_height, "Game")
resources.init()
raylib.SetTargetFPS(60);


while (!raylib.WindowShouldClose()):

  view.update()
  UserControlSystem.update()
  AnimationSystem.update()
  MovementSystem.update()

  draw_block:
    raylib.ClearBackground(raylib.RAYWHITE)

    draw_2d view:

      map.draw_base(view)
      CharacterDrawingSystem.draw()

      ordered_drawing.draw()

    def msg:
      racket.format("Nothing to show....")
    raylib.DrawText(msg, 10, 10, 20, raylib.DARKGRAY)
    raylib.DrawFPS(0,0)

raylib.CloseWindow()
