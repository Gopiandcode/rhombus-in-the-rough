#lang rhombus


import:
   rhombus/meta open
   lib("racket/main.rkt") as racket
   lib("raylib/2d/unsafe.rkt") as raylib

expr.macro 'when $expr:
               $body 
               ...':
    'cond 
     | $expr :
        $body
        ...
     | ~else #void'


macro 'unless $expr:
         $body
         ...':
    'cond 
     | ! $expr :
        $body
        ...
     | ~else #void'
 
macro 'while $expr:
         $body
         ...' :
  'block:
     fun loop ():
       if $expr
       | $body
         ...
         loop()
       | #void
     loop()'

macro
| 'set ($x) += $y': '$x := $x + $y'
| 'set ($x) -= $y': '$x := $x - $y'

macro 'draw:
        $body
        ...':
 'block:
   raylib.BeginDrawing()
   $body
   ...
   raylib.EndDrawing()'
   

// constants
def screen_width: 800
def screen_height: 450

class Ball(mutable x,mutable y)
def ball: Ball(0,0)



block:
  set (ball.x) += 1

raylib.InitWindow(screen_width,screen_height, "Game")
raylib.SetTargetFPS(60);
while (!raylib.WindowShouldClose()):

  when (raylib.IsKeyDown(raylib.KEY_D)): set (ball.x) += 2
  when (raylib.IsKeyDown(raylib.KEY_A)): set (ball.x) -= 2
  when (raylib.IsKeyDown(raylib.KEY_W)): set (ball.y) += 2
  when (raylib.IsKeyDown(raylib.KEY_S)): set (ball.y) -= 2

  draw:
    raylib.ClearBackground(raylib.RAYWHITE)
    raylib.DrawText("Move the ball with arrow keys!", 10, 10, 20, raylib.DARKGRAY)
    raylib.DrawCircle(ball.x, ball.y, 10., raylib.MAROON)

raylib.CloseWindow()
