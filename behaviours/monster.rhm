#lang rhombus

import:
  "../lib/ecs.rhm" open
  "../lib/lang.rhm" open

  "../game/behaviour_tree.rhm" open




fun near_player(elt): #void
fun do_attack_player(elt): #void
fun player_in_line_of_sight(elt): #void
fun aggro_towards_player(elt): #void
fun aggro_still_active(elt): #void
fun move_towards_player(elt): #void
fun follow_patrol(elt): #void

declare_behaviour_state(target,patrol)

behaviour_tree attack_player(this) with state(target):
  all_of:
    check near_player(this) using state(target)
    perform do_attack_player(this, target)

behaviour_tree aggro_player(this) with state(target):
  all_of:
    check player_in_line_of_sight(this) using state(target)
    perform aggro_towards_player(this,target)

behaviour_tree follow_player(this) with state(target):
  all_of:
    check aggro_still_active(this, target)
    perform move_towards_player(this,target)

behaviour_tree follow_patrol(this) with state(target, patrol):
  first_of:
    attack_player(this)
    follow_player(this)
    aggro_player(this)
    perform follow_patrol(this,patrol)


