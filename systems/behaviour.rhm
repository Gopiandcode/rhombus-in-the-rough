#lang rhombus

import:
  lib("raylib/2d/unsafe.rkt") as raylib

  "../lib/datatypes.rhm" open
  "../lib/ecs.rhm" open
  "../lib/lang.rhm" open

  "../lib/event.rhm"
  "../lib/message.rhm" expose: message
  "../messages.rhm" open

  "../game/behaviour_tree.rhm" open

  "../components/behaviour.rhm" open


export:
  BehaviourSystem

use_static

system BehaviourSystem(
    behaviour :: WithBehaviour
  ) with this:

  method update():
    match behaviour.tree.evaluate()
    | #'in_progress: #void
    | ~else: event.send(RemoveComponent(this, WithBehaviour))

