#lang rhombus

import:
  lib("raylib/2d/unsafe.rkt") as raylib

  "../lib/datatypes.rhm" open
  "../lib/ecs.rhm" open
  "../lib/lang.rhm" open
  "../game/raylib_lang.rhm" open
  "../lib/adt.rhm"

  "../lib/ordered_drawing.rhm"

  "../components/movement.rhm" open
  "../components/graphics.rhm" open
  "../components/character_state.rhm" open
  "../components/damage.rhm" open

export:
  CharacterDrawingSystem

use_static

def hurt: Color(200,80,80,255)


system CharacterDrawingSystem(
    position :: Position,
    anim :: AnimatedSprite,
    orientation :: Orientation
  ) with this:

    method draw():
      def color:
        if this.has_component(ReceivingDamageFrom)
        | hurt.inner()
        | raylib.WHITE
      ordered_drawing.queue_draw(
         anim.texture,
         math.inexact(position.value.x - 32.),
         math.inexact(position.value.y - 32.),
         64.,
         64.,
         math.inexact(64. * anim.frame_counter),
         math.inexact(64. * orientation.facing_direction.ind),
         64.,
         64.,
         0.,
         0.,
         color
       )
