#lang rhombus

import:
  lib("raylib/2d/unsafe.rkt") as raylib

  "../lib/datatypes.rhm" open
  "../lib/ecs.rhm" open
  "../lib/lang.rhm" open
  "../lib/ordered_drawing.rhm"

  "../components/graphics.rhm" open
  "../components/character_state.rhm" open
  "../components/weapon.rhm" open
  "../components/movement.rhm" open

export:
  AttackSystem
  WeaponAnimationSystem

use_static

system WeaponAnimationSystem(
    entity_state :: HasState,
    position :: Position,
    weapon_animation :: WeaponAnimation,
    anim :: AnimatedSprite,
    orientation :: Orientation
  ):

   method draw():
     match entity_state.state
     | State.Idle: #void
     | State.Attacking:
         ordered_drawing.queue_draw(
           weapon_animation.texture,
           math.inexact(position.value.x - 32.),
           math.inexact(position.value.y - 32.),
           64.,
           64.,
           math.inexact(64. * anim.frame_counter),
           math.inexact(64. * orientation.facing_direction.ind),
           64.,
           64.,
           0.,
           0.
         )

system AttackSystem(
     entity_state :: HasState,
     weapon :: WeaponActionAnimation,
     animation :: AnimatedSprite
  ):

  method update():
    cond
    | entity_state.state == State.Attacking && !weapon.animation_started:
        weapon.animation_started := #true
        weapon.animation_start_time := raylib.GetTime()

        weapon.old_texture := animation.texture
        weapon.old_frame_update_speed := animation.frame_update_speed
        weapon.old_frames := animation.frames
        animation.moving := #true
        animation.frame_counter := 0.
        animation.texture := weapon.texture
        animation.frame_update_speed := weapon.frame_update_speed
        animation.frames := weapon.frames
    | entity_state.state == State.Attacking && weapon.animation_started && (
         (raylib.GetTime() - weapon.animation_start_time) >= (
          weapon.frame_update_speed * weapon.frames
         )):
         entity_state.state := State.Idle
         weapon.animation_started := #false
         animation.texture := weapon.old_texture
         animation.frame_counter := 0.
         animation.frame_update_speed := weapon.old_frame_update_speed
         animation.frames := weapon.old_frames
         animation.moving := #false
    | ~else: #void
