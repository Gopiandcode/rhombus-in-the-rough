#lang rhombus

import:
  rhombus/meta open

  meta:
    lib("racket/syntax.rkt") as syntax

  lib("raylib/2d/unsafe.rkt") as raylib

  "../lib/datatypes.rhm" open
  "../lib/ecs.rhm" open
  "../lib/lang.rhm" open
  "../lib/spritesheet.rhm" expose: spritesheet
  "../lib/resources.rhm" expose: def_texture
  "../game/raylib_lang.rhm" open

  "../components/interaction.rhm" open
  "../components/health.rhm" open
  lib("pict/main.rkt") as pict
  lib("racket/class.rkt"):
    expose: send
    rename: send as rkt_send

export:
  HUDDrawingSystem

use_static


expr.macro 'send $target ... . $(method :: Identifier)($(kw :: Keyword): $kw_arg, ..., $arg, ...)':
  expr_meta.pack_s_exp(['rkt_send',
                        expr_meta.pack_expr('$target ...'),
                        method,
                        &(for List:
                            each p: [[kw, expr_meta.pack_expr(kw_arg)], ...]
                            each i: p
                            i),
                        expr_meta.pack_expr(arg), ...])

spritesheet UIBarSprite:
  options:
    ~spacing_x: 1.0
    ~offset_x: 259.0
    ~offset_y: 40.0
    ~width: 24.0
    ~height: 20.0
    ~shared
  Start Mid(~width:23.0) End(~width:25.0)

spritesheet UIBarCell:
  options:
    ~spacing_x: 1.0
    ~spacing_y: 2.0

    ~offset_x: 341.0
    ~offset_y: 40.0

    ~width: 8.0
    ~height: 14.0

    ~shared
  HealthS HealthM(~width:7.0)  HealthE(~spacing_x: 4.0)  EnergyS EnergyM(~width:7.0) EnergyE(~spacing_x: 4.0)  
  ManaS    ManaM(~width:7.0)   ManaE(~spacing_x: 4.0)    PowerS  PowerM(~width:7.0)  PowerE(~spacing_x: 4.0)  
  SpiritS  SpiritM(~width:7.0) SpiritE(~spacing_x: 4.0)  KiS     KiM(~width:7.0)     KiE(~spacing_x: 4.0)  

def_texture ui_texture: "../resources/images/ui_big_pieces.png"

def picture: spritesheet.render(UIBarSprite.tiles ++ UIBarCell.tiles, ui_texture)

system HUDDrawingSystem(
    player :: IsPlayer,
    health :: Health
  ) with this:

    method draw():
      raylib.DrawTexturePro(
        ui_texture.inner(),
        Rectangle(0.,0.,32.,32.).inner(),
        Rectangle(0.,0.,128.,128.).inner(),
        Vector2(0.,0.).inner(),
        0.,
        raylib.WHITE
      )

picture
