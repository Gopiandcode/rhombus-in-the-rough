#lang rhombus

import:
  lib("raylib/2d/unsafe.rkt") as raylib

  "../lib/lang.rhm" open
  "../lib/datatypes.rhm" open
  "../game/raylib_lang.rhm" open
  "../lib/ordered_drawing.rhm"

  "../game/view.rhm" open
  "../game/game_map.rhm"
  "../game/game_state.rhm"
  "../game/inventory_panel.rhm"
  "../game/inventory.rhm"

  "../lib/spritesheet.rhm" expose: spritesheet Sprite
  "../lib/resources.rhm" expose: def_texture



export:
  InventoryScreen

def_texture ui_texture: "./resources/images/ui_big_pieces.png"


def INVENTORY_ROWS: 5.0
def INVENTORY_COLS: 8.0
def origin: Vector2(0.,0.)
def SIZE: 80.0

class InventoryScreen(player_inventory :: inventory.Inventory, mutable completed :: Boolean):
  implements game_state.Screen
  constructor (inventory): super(inventory, #false)

  override method draw():
    inventory_panel.draw(player_inventory)

  override method update():
    handle_inputs (raylib.IsKeyPressed)
    | raylib.KEY_A
      inventory_panel.select_left()
    | raylib.KEY_D
      inventory_panel.select_right()
    | raylib.KEY_W
      inventory_panel.select_up()
    | raylib.KEY_S
      inventory_panel.select_down()
    | raylib.KEY_I
      completed := #true

  override method should_pop(): completed
