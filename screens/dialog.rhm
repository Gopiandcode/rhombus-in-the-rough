#lang rhombus

import:
  lib("raylib/2d/unsafe.rkt") as raylib

  "../lib/datatypes.rhm" open

  "../game/raylib_lang.rhm" open
  "../game/game_state.rhm"
  "../game/dialog_box.rhm"
  "../game/dialog.rhm"

export:
  DialogScreen

def sprite_rect: Rectangle(0.,0.,2048.,2048.)
def dest_rect: Rectangle(0.,0.,320.,320.)
def origin: Vector2(0.,0.)



class DialogScreen(
     dialog_item :: dialog.Dialog,
     mutable is_completed :: Boolean
   ):
  implements game_state.Screen

  constructor (dialog_item): super(dialog_item, #false)

  override method draw():
    dialog_box.draw_character_left(dialog_item.character_sprite)
    dialog_box.draw()
    dialog_box.draw_text(dialog_item.text)

  override method update():
    handle_inputs (raylib.IsKeyReleased)
    | raylib.KEY_Q
      is_completed := #true


  override method should_pop(): is_completed
